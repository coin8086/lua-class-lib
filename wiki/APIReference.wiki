#summary API details

= Index =
<wiki:toc max_depth="1" />

= class =
*Type*
 function

*Summary*
 Define a class in the environment of the calling function.

*Examples*
 __
{{{
class 'myclass1' ...
class 'myclass2: parent1, parent2' ...
}}}

*Parameters*
 * A single string containing a name list

 To define a class without a parent, put a single class name in the list, like
{{{
'myclass'
}}}

 To inherit from other classes, list these classes' names after a '*:*' following the class name, separated by '*,*', like 
{{{
'subclass: parent1, parent2'
}}}
 Spaces before/after ':' and ',' will be trimed.

  _Note: The base classes must be 'visible' at the point that a subclass is defining._

 A valid class name starts with a letter followed by zero or more characters of letter, number and underscore '`_`'. It has the following pattern
{{{
'[a-zA-Z][a-zA-Z0-9_]*'
}}}
 An exception will be raised if an invalid name list string is passed in.

*Return*
 * A [APIReference#Class_Closure Class Closure]

 In fact, calling _class_ doesn't really define a class, but only do halfway by returning a closure. The closure takes a single table parameter, which is the class definition body, and defines a [APIReference#Class_Object Class Object] finally. See [APIReference#Class_Closure Class Closure] for details.


= _Class Closure_ =
*Type*
 closure

*Summary*
 A halfway class definition closure, returned by a _[APIReference#class class]_ call, and defining a [APIReference#Class_Object Class Object] in the environment of the previous _[APIReference#class class]_ call when called with a class definition table.

*Examples*
 __
{{{
class 'myclass1' 
{
    __init__ = function(self, x, y, z)  --initializer 
        self.x = x
        --...
    end;

    foo = function(self)  --method
        --...
    end;

    --...
}
}}}

 class 'myclass1' returns a Class Closure, which takes a following table as argument and defines a [APIReference#Class_Object Class Object] bound to variable myclass1 in the environment of _[APIReference#class class]_' calling function.

*Parameters*
 * A single table as a class definition body

 Class members, such as initializer and methods, as well as attributes, go in the table.

*Return*
 Nothing

= _Class Object_ =

*Type*
 table

*Summary*
 A table defined by a [APIReference#Class_Closure Class Closure] call. In fact, it's exactly the same table that is passed as an argument to the [APIReference#Class_Closure Class Closure] call, but with a metatable set by Lua Class lib, which makes it be able to be called as a constructor to create new objects of the class.

*Examples*
 __
{{{
class 'MyClass1' 
{
    __init__ = function(self, x, y)  --initializer 
        self.x = x
        self.y = y
    end;

    --...
}

obj = MyClass1(1, 2)
assert(type(MyClass1) == 'table')
assert(type(MyClass1.__init__) == 'function')
}}}

*Parameters*
 When called as a constructor, a Class Object internally calls the `__init__` function defined by user, passing a class instance as the first argument along with all arguments passed to it, and returns a new instance. If no `__init__` is defined, it ignores any arguments and just returns a new instance.

*Return*
 A class instance


= isInstanceOf =

*Type*
 function

*Summary*
 Determine whether an object is an instance of a class or a derived one of that class.

*Examples*
 __
{{{
class 'A' ...
class 'B: A' ...
a = A()
b = B()
assert(isInstanceOf(a, A))
assert(isInstanceOf(b, A))
assert(!isInstanceOf(a, B))
}}}

*Parameters*
 * an instance
 * a [APIReference#Class_Object Class Object]

 An exception may be raised when an instance or [APIReference#Class_Object Class Object] argument is invalid.

*Return*
 * true or false

= getClass =

*Type*
 function

*Summary*
 Get the [APIReference#Class_Object Class Object] of an instance.

*Examples*
 __
{{{
class 'A' ...
o = A()
C = getClass(o)
assert(C == A)
}}}

*Parameters*
 * an instance

*Return*
 * The [APIReference#Class_Object Class Object] of an instance

= getBaseClasses =

*Type*
 function

*Summary*
 Get the base classes' [APIReference#Class_Object Class Object] of a subclass.

*Examples*
 __
{{{
class 'A' ...
class 'B' ...
class 'C: A, B' ...
bases = getBaseClasses(C)
assert(bases[1] == A)
assert(bases[2] == B)
assert(#bases == 2)
}}}

*Parameters*
 * a [APIReference#Class_Object Class Object]

*Return*
 * An array of base classes' [APIReference#Class_Object Class Object], in the order that they're inherited in a subclass. It's empty when a class has no base class.